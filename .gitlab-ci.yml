stages:
    - build
    - deploy

deploy:
    when: manual
    state: deploy
    before_script:
        # Install ssh-agent if not already installed, it is required by Docker.
        # (change apt-get to yum if you use a CentOS-based image)
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

          # Run ssh-agent (inside the build environment)
        - eval $(ssh-agent -s)

          # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
        - ssh-add <(echo "$SSH_PRIVATE_KEY")

          # For Docker builds disable host key checking. Be aware that by adding that
          # you are suspectible to man-in-the-middle attacks.
          # WARNING: Use this only with the Docker executor, if you use it with shell
          # you will overwrite your user's SSH config.
        - mkdir -p ~/.ssh
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    script:
        - ssh root@188.166.198.221 "cd /build && sudo git fetch origin && git checkout ${CI_BUILD_REF}"
        - ssh root@188.166.198.221 "cd /build && sudo GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET} MAILER_AUTH_USER=${MAILER_AUTH_USER} MAILER_AUTH_PASS=${MAILER_AUTH_PASS} CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY} docker-compose pull"
        - ssh root@188.166.198.221 "cd /build && sudo GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET} MAILER_AUTH_USER=${MAILER_AUTH_USER} MAILER_AUTH_PASS=${MAILER_AUTH_PASS} CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY} docker-compose stop"
        - ssh root@188.166.198.221 "cd /build && sudo GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET} MAILER_AUTH_USER=${MAILER_AUTH_USER} MAILER_AUTH_PASS=${MAILER_AUTH_PASS} CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY} docker-compose rm -f"
        - ssh root@188.166.198.221 "cd /build && sudo GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET} MAILER_AUTH_USER=${MAILER_AUTH_USER} MAILER_AUTH_PASS=${MAILER_AUTH_PASS} CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY} docker-compose up -d"

build:
    stage: build
    image: docker:latest
    variables:
        DOCKER_DRIVER: overlay
    services:
        - docker:dind
    before_script:
        - apk add --no-cache py-pip
        - pip install docker-compose
    script:
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
        - docker-compose build
        - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET} MAILER_AUTH_USER=${MAILER_AUTH_USER} MAILER_AUTH_PASS=${MAILER_AUTH_PASS} CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY} docker-compose up -d && docker-compose ps
        - docker-compose push
