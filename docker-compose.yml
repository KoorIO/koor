version: "2"

services:
  users:
    build: ./users
    image: registry.gitlab.com/thanhson1085/koor:users
    restart: "on-failure:3"
    environment:
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      MAILER_AUTH_PASS: ${MAILER_AUTH_PASS}
      MAILER_AUTH_USER: ${MAILER_AUTH_USER}
    depends_on:
      - db
      - redis
    networks:
      - front-net
      - back-net

  apps:
    build: ./apps
    image: registry.gitlab.com/thanhson1085/koor:apps
    restart: "on-failure:3"
    depends_on:
      - db
      - redis
    environment:
      MAILER_AUTH_PASS: ${MAILER_AUTH_PASS}
      MAILER_AUTH_USER: ${MAILER_AUTH_USER}
      CLOUDFLARE_API_KEY: ${CLOUDFLARE_API_KEY}
    networks:
      - front-net
      - back-net

  socket:
    build: ./websocket
    image: registry.gitlab.com/thanhson1085/koor:socket
    restart: "on-failure:3"
    depends_on:
      - redis
    networks:
      - front-net
      - back-net

  iot:
    build: ./iot
    image: registry.gitlab.com/thanhson1085/koor:iot
    restart: "on-failure:3"
    depends_on:
      - db
      - redis
    networks:
      - front-net
      - back-net

  site:
    build: ./site
    image: registry.gitlab.com/thanhson1085/koor:site
    networks:
      - front-net

  land:
    build: ./land
    image: registry.gitlab.com/thanhson1085/koor:land
    networks:
      - front-net

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - back-net

  db:
    image: mongo:3.2
    container_name: db
    volumes:
        - "mongodb:/data/db"
    networks:
      - back-net

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx/app.template:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.template:/etc/nginx/nginx.conf
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
    depends_on:
      - apps
      - users
      - broker
      - socket
    networks:
      - front-net
      - proxy-net

  broker:
    build: ./broker
    image: registry.gitlab.com/thanhson1085/koor:broker
    container_name: broker
    depends_on:
      - iot
    networks:
      - front-net
      - proxy-net

  haproxy:
    image: haproxy:alpine
    container_name: haproxy
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "80:80"
      - "443:443"
      - "1883:1883"
      - "8883:8883"
      - "1936:1936"
    depends_on:
      - nginx
      - broker
    networks:
      - proxy-net

volumes:
    mongodb:
networks:
  front-net:
  back-net:
  proxy-net:
