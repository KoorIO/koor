upstream docs {
    server docs;
}

upstream be_users {
    server users;
}

upstream be_apps {
    server apps;
}

upstream fe_site {
    server site;
}

upstream fe_land {
    server land;
}

upstream be_socket {
    server socket;
}

upstream be_mqtt {
    server broker:8080;
}

upstream m_grafana {
    server grafana:3000;
}

upstream m_kibana {
    server kibana:5601; 
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    location /u/api/ {
        rewrite ^/u/api/(.*)$ /api/$1 break;
        proxy_pass http://be_users/;
    }

    location /a/api/ {
        rewrite ^/a/api/(.*)$ /api/$1 break;
        proxy_pass http://be_apps/;
    }

    location /app/ {
        rewrite ^/app/(.*)$ /$1 break;
        proxy_pass http://fe_site/;
    }

    location /websocket/ {
        rewrite ^/websocket/(.*)$ /$1 break;
        proxy_pass http://be_socket/;
    }

    location /socket.io/ {
        rewrite ^/(.*)$ /$1 break;
        proxy_pass http://be_socket/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /docs/ {
        proxy_pass http://docs/;
    }

    location / {
        if (-f $document_root/maintenance.html) {
            return 503;
        }
        proxy_pass http://fe_land/;
        #auth_basic "Restricted Content";
        #auth_basic_user_file /etc/nginx/.htpasswd;
    }

    error_page 503 @maintenance;
    location @maintenance {
        rewrite ^(.*)$ /maintenance.html break;
    }
}

server {
    listen 80;
    server_name kibana.koor.io;
    location /s {
        proxy_pass http://m_kibana/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;   
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }
}

server {
    listen 80;
    server_name grafana.koor.io;
    location / {
        proxy_pass http://m_grafana/;
    }
}

server {
    listen 80;
    server_name *.koor.io;
    location /socket.io/ {
        rewrite ^/(.*)$ /$1 break;
        proxy_pass http://be_socket/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location = /mqtt {
        rewrite ^/(.*)$ /$1 break;
        proxy_pass http://be_mqtt;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    location = /docs {
        rewrite ^/docs$ /docs/$host break;
        proxy_pass http://be_apps/;
    }

    location /get/ {
        rewrite ^/get/(.*)$ /get/$host/$1 break;
        proxy_pass http://be_apps/;
    }

    location / {
        rewrite ^/(.*)$ /run/$host/$1 break;
        proxy_pass http://be_apps/;
    }
}

